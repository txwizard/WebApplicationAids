id: WizardWrx.WebApplicationAids
language: CSharp
name:
  Default: WizardWrx.WebApplicationAids
qualifiedName:
  Default: WizardWrx.WebApplicationAids
type: Assembly
modifiers: {}
items:
- id: WizardWrx.WebApplicationAids
  commentId: N:WizardWrx.WebApplicationAids
  language: CSharp
  name:
    CSharp: WizardWrx.WebApplicationAids
    VB: WizardWrx.WebApplicationAids
  nameWithType:
    CSharp: WizardWrx.WebApplicationAids
    VB: WizardWrx.WebApplicationAids
  qualifiedName:
    CSharp: WizardWrx.WebApplicationAids
    VB: WizardWrx.WebApplicationAids
  type: Namespace
  assemblies:
  - WizardWrx.WebApplicationAids
  modifiers: {}
  items:
  - id: WizardWrx.WebApplicationAids.ConfigFileReaders
    commentId: T:WizardWrx.WebApplicationAids.ConfigFileReaders
    language: CSharp
    name:
      CSharp: ConfigFileReaders
      VB: ConfigFileReaders
    nameWithType:
      CSharp: ConfigFileReaders
      VB: ConfigFileReaders
    qualifiedName:
      CSharp: WizardWrx.WebApplicationAids.ConfigFileReaders
      VB: WizardWrx.WebApplicationAids.ConfigFileReaders
    type: Class
    assemblies:
    - WizardWrx.WebApplicationAids
    namespace: WizardWrx.WebApplicationAids
    source:
      remote:
        path: D:/Source_Code/Visual_Studio/Projects/WizardWrx_Libs/WebApplicationAids/WebApplicationAids/ConfigFileReaders.cs
      id: ConfigFileReaders
      path: ../WebApplicationAids/ConfigFileReaders.cs
      startLine: 81
    summary: "\nThis static (Shared in Visual Basic) class exposes static (Shared in\nVisual Basic) methods that enable any assembly, be it EXE or or DLL, to\nquery web.config files for values.\n"
    example: []
    syntax:
      content:
        CSharp: public static class ConfigFileReaders
        VB: Public Module ConfigFileReaders
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig(System.String,System.String)
      commentId: M:WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig(System.String,System.String)
      language: CSharp
      name:
        CSharp: GetConnectionStringFromWebConfig(String, String)
        VB: GetConnectionStringFromWebConfig(String, String)
      nameWithType:
        CSharp: ConfigFileReaders.GetConnectionStringFromWebConfig(String, String)
        VB: ConfigFileReaders.GetConnectionStringFromWebConfig(String, String)
      qualifiedName:
        CSharp: WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig(System.String, System.String)
        VB: WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig(System.String, System.String)
      type: Method
      assemblies:
      - WizardWrx.WebApplicationAids
      namespace: WizardWrx.WebApplicationAids
      source:
        remote:
          path: D:/Source_Code/Visual_Studio/Projects/WizardWrx_Libs/WebApplicationAids/WebApplicationAids/ConfigFileReaders.cs
        id: GetConnectionStringFromWebConfig
        path: ../WebApplicationAids/ConfigFileReaders.cs
        startLine: 117
      summary: "\nGet the connection string identified by name by string\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">pstrConnectionStringName</code> from the official\nconnectionStrings section of the web.config file specified by the\nrelative or absolute file named in string\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">pstrAbsoluteConfigFileName</code>.\n"
      remarks: "\nThis method works by treating the web.config file as a standard XML\ndocument.\n"
      example: []
      syntax:
        content:
          CSharp: public static ConnectionStringSettings GetConnectionStringFromWebConfig(string pstrAbsoluteConfigFileName, string pstrConnectionStringName)
          VB: Public Shared Function GetConnectionStringFromWebConfig(pstrAbsoluteConfigFileName As String, pstrConnectionStringName As String) As ConnectionStringSettings
        parameters:
        - id: pstrAbsoluteConfigFileName
          type: System.String
          description: "\nThis string must be either an absolute (fully qualified) file name\nor a name that is valid relative to the current working directory.\n"
        - id: pstrConnectionStringName
          type: System.String
          description: "\nThis string must contain the &quot;name&quot; property of a node in the\nconnectionStrings section of a well-formed web.config file.\n"
        return:
          type: System.Configuration.ConnectionStringSettings
          description: "\n<p>\nIf it succeeds, the return value is a ConnectionStringSettings\nobject that has valid name and connectionString properties.\nOtherwise, the return value is NULL.\n</p>\n<p>\nIts providerName property may have a value, or it may be null.\n</p>\n<p>\nRegardless, the returned ConnectionStringSettings object can be\ntreated as if it had been read from a web.config file in the usual\nway.\n</p>\n"
      overload: WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Configuration:
    name:
      CSharp:
      - name: System.Configuration
        nameWithType: System.Configuration
        qualifiedName: System.Configuration
        isExternal: true
      VB:
      - name: System.Configuration
        nameWithType: System.Configuration
        qualifiedName: System.Configuration
    isDefinition: true
    commentId: N:System.Configuration
  System.Configuration.ConnectionStringSettings:
    name:
      CSharp:
      - id: System.Configuration.ConnectionStringSettings
        name: ConnectionStringSettings
        nameWithType: ConnectionStringSettings
        qualifiedName: System.Configuration.ConnectionStringSettings
        isExternal: true
      VB:
      - id: System.Configuration.ConnectionStringSettings
        name: ConnectionStringSettings
        nameWithType: ConnectionStringSettings
        qualifiedName: System.Configuration.ConnectionStringSettings
        isExternal: true
    isDefinition: true
    parent: System.Configuration
    commentId: T:System.Configuration.ConnectionStringSettings
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig*:
    name:
      CSharp:
      - id: WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig*
        name: GetConnectionStringFromWebConfig
        nameWithType: ConfigFileReaders.GetConnectionStringFromWebConfig
        qualifiedName: WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig
      VB:
      - id: WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig*
        name: GetConnectionStringFromWebConfig
        nameWithType: ConfigFileReaders.GetConnectionStringFromWebConfig
        qualifiedName: WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig
    isDefinition: true
    commentId: Overload:WizardWrx.WebApplicationAids.ConfigFileReaders.GetConnectionStringFromWebConfig
  WizardWrx.WebApplicationAids.ConfigFileReaders:
    name:
      CSharp:
      - id: WizardWrx.WebApplicationAids.ConfigFileReaders
        name: ConfigFileReaders
        nameWithType: ConfigFileReaders
        qualifiedName: WizardWrx.WebApplicationAids.ConfigFileReaders
      VB:
      - id: WizardWrx.WebApplicationAids.ConfigFileReaders
        name: ConfigFileReaders
        nameWithType: ConfigFileReaders
        qualifiedName: WizardWrx.WebApplicationAids.ConfigFileReaders
    isDefinition: true
    commentId: T:WizardWrx.WebApplicationAids.ConfigFileReaders
  WizardWrx.WebApplicationAids:
    name:
      CSharp:
      - name: WizardWrx.WebApplicationAids
        nameWithType: WizardWrx.WebApplicationAids
        qualifiedName: WizardWrx.WebApplicationAids
      VB:
      - name: WizardWrx.WebApplicationAids
        nameWithType: WizardWrx.WebApplicationAids
        qualifiedName: WizardWrx.WebApplicationAids
    isDefinition: true
    commentId: N:WizardWrx.WebApplicationAids
