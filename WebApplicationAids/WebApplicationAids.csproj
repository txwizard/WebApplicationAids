<?xml version="1.0" encoding="utf-8"?>
<!--
	============================================================================
	Project Name:		WebApplicationAids.csproj

	Project Abstract:	Define methods to facilitate developing robust Web
	                    applications.

	============================================================================
	Revision History
	============================================================================

	Date       By  Description
	========== === =============================================================
	2021/12/16 DAG Assembly created.
	============================================================================
-->
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- 2021/12/16 - DAG - Copy custom task NuGetPackageNameFixup from WizardWrx.Common.  -->
  <UsingTask TaskName="NuGetPackageNameFixup" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
    <ParameterGroup>
      <RawNugetPackageVersion ParameterType="System.String" Required="true" />
      <ActualNugetPackageVersion ParameterType="System.String" Output="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Fragment" Language="cs"><![CDATA[
            ActualNugetPackageVersion = RawNugetPackageVersion.EndsWith ( ".0" ) ? RawNugetPackageVersion.Substring(0,RawNugetPackageVersion.Length-2) : RawNugetPackageVersion;
            Log.LogMessage ( "Custom Task NuGetPackageNameFixup: RawNugetPackageVersion    = "+ RawNugetPackageVersion    );
            Log.LogMessage ( "Custom Task NuGetPackageNameFixup: ActualNugetPackageVersion = "+ ActualNugetPackageVersion );
        ]]></Code>
    </Task>
  </UsingTask>
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{3E8CE149-6D6A-4C2C-9B4A-A0274FD94ABF}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>WizardWrx.WebApplicationAids</RootNamespace>
    <AssemblyName>WizardWrx.WebApplicationAids</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <Deterministic>true</Deterministic>
    <!-- 2021/12/16 - DAG - Added for NuGet package builder -->
    <PackageDir>$(ProjectDir)Package</PackageDir>
    <SolutionPackageDir>$(ProjectDir)\packages</SolutionPackageDir>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>.pdb$;(AllowedOutputExtensionsInPackageBuildOutputFolder)</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Debug\WizardWrx.WebApplicationAids.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Release\WizardWrx.WebApplicationAids.xml</DocumentationFile>
  </PropertyGroup>
  <!--
    2021/12/16 DAG Add the following, per thread message that begins, "An
	               alternative that is working for me so far is to add the
	               following to the project file:"

	               Reference: "Conditional Compilation and Framework Targets," thread at
                              http://stackoverflow.com/questions/2923210/conditional-compilation-and-framework-targets
  -->
  <PropertyGroup>
    <DefineConstants Condition=" !$(DefineConstants.Contains(';NET')) ">$(DefineConstants);$(TargetFrameworkVersion.Replace("v", "NET").Replace(".", ""))</DefineConstants>
    <DefineConstants Condition=" $(DefineConstants.Contains(';NET')) ">$(DefineConstants.Remove($(DefineConstants.LastIndexOf(";NET"))));$(TargetFrameworkVersion.Replace("v", "NET").Replace(".", ""))</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Configuration" />
    <Reference Include="System.Core" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Xml" />
    <Reference Include="WizardWrx.BitMath, Version=4.3.125.29248, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\WizardWrx.BitMath.4.3.125.29248\lib\net20\WizardWrx.BitMath.dll</HintPath>
    </Reference>
    <Reference Include="WizardWrx.Common, Version=8.0.174.0, Culture=neutral, processorArchitecture=MSIL">
      <HintPath>..\packages\WizardWrx.Common.8.0.174\lib\net35-client\WizardWrx.Common.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="ConfigFileReaders.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="ChangeLog.md" />
    <None Include="packages.config" />
    <None Include="README.md" />
    <None Include="WebApplicationAids.nuspec" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- 2019/05/19 14:16:44 - DAG Everything from this point to the end is new, and was added to support NuGet package generation. -->
  <Target Name="AfterBuild">
    <!-- Load up the information from the assembly -->
    <GetAssemblyIdentity AssemblyFiles="$(OutputPath)$(AssemblyName).dll">
      <Output TaskParameter="Assemblies" ItemName="OutputAssemblyInfo" />
    </GetAssemblyIdentity>
    <Message Text="Info: Assembly $(AssemblyName).dll version =  %(OutputAssemblyInfo.Version)" />
  </Target>
  <Target Name="Package" AfterTargets="AfterBuild" Condition=" '$(Configuration)' == 'Release'">
    <!-- Ensure the Package directory exists for this project -->
    <MakeDir Directories="$(PackageDir)" />
    <!-- Package the project -->
    <Exec WorkingDirectory="$(BuildDir)" Command="NuGet.exe pack $(ProjectName).csproj -Properties Configuration=$(Configuration) -OutputDir $(PackageDir) -IncludeReferencedProjects -Verbosity detailed" />
  </Target>
  <!-- 2019/07/05 16:43:12 - DAG Switch on the push target. -->
  <!-- Publish the project. -->
  <Target Name="Publish" AfterTargets="Package" Condition=" '$(Configuration)' == 'Release'">
    <NuGetPackageNameFixup RawNugetPackageVersion="%(OutputAssemblyInfo.Version)">
      <Output PropertyName="NuGetPackageVersion" TaskParameter="ActualNugetPackageVersion" />
    </NuGetPackageNameFixup>
    <Exec WorkingDirectory="$(PackageDir)" Command="NuGet.exe push $(AssemblyName).$(NuGetPackageVersion).nupkg -Source nuget.org" />
  </Target>
  <Target Name="BeforeBuild" Condition=" '$(Configuration)' == 'Debug'">
    <Exec WorkingDirectory="$(ProjectDir)" Command="nuget install packages.config -OutputDirectory $(SolutionPackageDir)" />
  </Target>
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it.
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="AfterBuild">
  </Target>
  -->
  <PropertyGroup>
    <PreBuildEvent>wwBldNbrMgr.exe "$(ProjectDir) "</PreBuildEvent>
  </PropertyGroup>
  <PropertyGroup>
    <PostBuildEvent>wwBldNbrMgr.exe -r "-p$(ProjectDir) " "-t$(TargetPath)"</PostBuildEvent>
  </PropertyGroup>
</Project>